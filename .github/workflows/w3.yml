name: Fetch sha directly

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ────────────────────────────────────────────────────────────────
      # Step: read the event-payload JSON and pull out the head SHA
      # ────────────────────────────────────────────────────────────────
      - name: Extract PR head SHA
        id: pr_sha
        run: |
          # GITHUB_EVENT_PATH is set automatically by GitHub Actions
          echo "Reading event payload from: $GITHUB_EVENT_PATH"

          # For pull_request events, the head commit lives at .pull_request.head.sha
          # For push events there is no pull_request object, so we fall back to .head_commit.id or .after
          HEAD_SHA=$(jq -r '
              if .pull_request then .pull_request.head.sha
              elif .head_commit then .head_commit.id
              else .after
              end // empty
          ' "$GITHUB_EVENT_PATH")

          if [[ -z "$HEAD_SHA" ]]; then
            echo "❌ Could not determine head SHA"; exit 1
          fi

          echo "Head SHA detected: $HEAD_SHA"
          # Expose as a step output so later steps can reference it with steps.pr_sha.outputs.head_sha
          echo "head_sha=$HEAD_SHA" >> "$GITHUB_OUTPUT"

      - name: git commands
        run: |
          HEADSHA="${{ steps.pr_sha.outputs.head_sha }}"
          echo "Using SHA: $HEADSHA"
          echo Git fetch exact sha:
          git fetch --update-shallow --filter=blob:none --recurse-submodules=no $(git config --default origin --get clone.defaultRemoteName) $HEADSHA
          echo Git log 25:
          git log --pretty=oneline -n 25
          echo Git show:
          git show $HEADSHA -s --format='%H","%aI","%an","%ae","%cI","%cn","%ce","%B'
          echo Git log:
          git log -n 1 --format=%B $HEADSHA
